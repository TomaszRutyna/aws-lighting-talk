/*
 * Copyright 2001,2017 (c) Point Of Sale Solutions (POSS) of Sabre Inc. All
 * rights reserved.
 * 
 * This software and documentation is the confidential and proprietary
 * information of Sabre Inc. ("Confidential Information"). You shall not
 * disclose such Confidential Information and shall use it only in accordance
 * with the terms of the license agreement you entered into with Sabre Inc.
 */
package pl.edge1s.aws.service;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.google.common.base.Preconditions;
import com.google.common.collect.Sets;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import pl.edge1s.aws.service.dto.CreateLightingTalkDto;
import pl.edge1s.aws.service.dto.EditLightingTalkDto;
import pl.edge1s.aws.service.dto.LightingTalkDto;

import java.time.LocalDateTime;
import java.util.Set;
import java.util.UUID;
import java.util.stream.Collectors;
/**
 * @author Tomasz Rutyna (SG0301553)
 * @since Dec 01, 2017
 */
@Getter
@Builder
@NoArgsConstructor
@DynamoDBTable(tableName = "LightingTalk")
class LightingTalk
{
    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBAttribute
    private String uuid;

    @DynamoDBAttribute
    private String name;

    @DynamoDBAttribute
    private String description;

    @DynamoDBAttribute
    private LocalDateTime startTime;

    @DynamoDBAttribute
    private String presenter;

    @DynamoDBAttribute
    private Set<LightingTalkFile> files = Sets.newHashSet();

    static LightingTalk create(CreateLightingTalkDto dto)
    {
        return LightingTalk.builder()
                        .uuid(UUID.randomUUID().toString())
                        .name(dto.getName())
                        .description(dto.getDescription())
                        .startTime(dto.getStartTime())
                        .presenter(dto.getPresenter())
                        .build();
    }

    void update(EditLightingTalkDto dto)
    {
        Preconditions.checkState(this.uuid.equals(dto.getUuid()));

        this.name = dto.getName();
        this.description = dto.getDescrption();
        this.startTime = dto.getStartTime();
    }

    void appendFile(LightingTalkFile file)
    {
        this.files.add(file);
    }

    LightingTalkDto toDto() {
        return LightingTalkDto.builder()
                        .name(this.name)
                        .description(this.description)
                        .presenter(this.presenter)
                        .startTime(this.startTime)
                        .uuid(this.uuid)
                        .files(this.files.stream()
                                        .map(LightingTalkFile::toDto)
                                        .collect(Collectors.toList()))
                        .build();
    }
}
